<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Icons="clr-namespace:MVVMCalculator.View.Resources.Icons">

    <!-- Style for the title bar button -->
    <Style
        x:Key="TitleBarButtonStyle"
        TargetType="{x:Type Button}">
        <!-- AcceptsReturn property is being set to False for keyboard navigation
        to prevent the Enter button from performing undesired actions. -->
        <Setter
            Property="KeyboardNavigation.AcceptsReturn"
            Value="False" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <!-- Set the template for the button -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Define triggers for mouse over and button press states -->
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumGray}" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumLightGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for number buttons -->
    <Style
        x:Key="NumberButtonStyle"
        TargetType="{x:Type Button}">
        <!-- AcceptsReturn property is being set to False for keyboard navigation
        to prevent the Enter button from performing undesired actions. -->
        <Setter
            Property="KeyboardNavigation.AcceptsReturn"
            Value="False" />
        <Setter
            Property="Background"
            Value="{DynamicResource MediumLightGray}" />
        <Setter
            Property="Margin"
            Value="1.2,1.2,1.2,1." />
        <Setter
            Property="Foreground"
            Value="{DynamicResource White}" />
        <Setter
            Property="FontSize"
            Value="18" />
        <Setter
            Property="FontWeight"
            Value="Regular" />
        <!-- Set the template for the button -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Define triggers for mouse over and button press states -->
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumGray}" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumDarkGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style for operator buttons -->
    <Style
        x:Key="OperatorButtonStyle"
        TargetType="{x:Type Button}">
        <!-- AcceptsReturn property is being set to False for keyboard navigation
        to prevent the Enter button from performing undesired actions. -->
        <Setter
            Property="KeyboardNavigation.AcceptsReturn"
            Value="False" />
        <Setter
            Property="Background"
            Value="{DynamicResource MediumGray}" />
        <Setter
            Property="Margin"
            Value="1.2,1.2,1.2,1.2" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource White}" />
        <Setter
            Property="FontSize"
            Value="18" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <!-- Set the template for the button -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Define triggers for mouse over and button press states -->
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumLightGray}" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style for the close button -->
    <Style
        x:Key="CloseButtonStyle"
        TargetType="{x:Type Button}">
        <!-- AcceptsReturn property is being set to False for keyboard navigation
        to prevent the Enter button from performing undesired actions. -->
        <Setter
            Property="KeyboardNavigation.AcceptsReturn"
            Value="False" />
        <Setter
            Property="Background"
            Value="Transparent"/>
        <Setter
            Property="Content">
            <Setter.Value>
                <Icons:CloseIcon
                    Height="30"
                    Width="50" />
            </Setter.Value>
        </Setter>
        <!-- Set the template for the button -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Define triggers for mouse over and button press states -->
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Content">
                    <Setter.Value>
                        <Icons:CLoseIcon_Y
                            Height="30"
                            Width="50" />
                    </Setter.Value>
                </Setter>
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumYellow}" />
 
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumLightYellow}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style for the equal button -->
    <Style
        x:Key="EqualButton"
        TargetType="{x:Type Button}">
        <!-- AcceptsReturn property is being set to False for keyboard navigation
        to prevent the Enter button from performing undesired actions. -->
        <Setter
            Property="KeyboardNavigation.AcceptsReturn"
            Value="False" />
        <Setter
            Property="Background"
            Value="{DynamicResource MediumYellow}" />
        <Setter
            Property="Margin"
            Value="1.2,1.2,1.2,1.2" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource DarkGray}" />
        <Setter
            Property="FontSize"
            Value="25" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <!-- Set the template for the button -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Define triggers for mouse over and button press states -->
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumDarkYellow}" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource DarkYellow}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Style for the main window border -->
    <Style
        x:Key="MainWindowBorder"
        TargetType="{x:Type Border}">
        <Style.Triggers>
            <!-- Define triggers to adjust margin based on window state 
            Add to avoid border disappearing when window is maximized -->
            <DataTrigger
                Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                Value="Maximized">
                <Setter
                    Property="Margin"
                    Value="8" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                Value="Normal">
                <Setter
                    Property="Margin"
                    Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>